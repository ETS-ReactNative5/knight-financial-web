"use strict";var precacheConfig=[["/index.html","7f69667269cb24fcebc37400c0f7a339"],["/static/css/main.a796421f.css","9a4614325b8b58dcc8c3eb4dcf45dd16"],["/static/js/main.587ec11f.js","be91157fabc566f041e4f4ff993043bd"],["/static/media/LemonMilk.a06396ec.woff","a06396ecbce905ec8b8fd35ee80ff765"],["/static/media/LemonMilkbold.ea9f3c8c.woff","ea9f3c8c2ee1b64b1bfd2d0dbd7a2664"],["/static/media/LemonMilklight.1b0b77f8.woff","1b0b77f89e92e664b3187f666c712161"],["/static/media/LemonMilklightitalic.f1ad9c3c.woff","f1ad9c3c6620fe0bc81ea5f6d6dd2498"],["/static/media/Logo-icon.44906232.gif","44906232eed2a0e7a7843829e34159ea"],["/static/media/Staked.693ff4a0.gif","693ff4a0001beca32812d0c320e89d53"],["/static/media/Trades.4a9b0341.gif","4a9b03416f4dcdd0ceaf90d0ee08f767"],["/static/media/User.53f83280.gif","53f83280dcf4f8141a2ac2d4ebb0a99e"],["/static/media/acharactor.4b6e6ae4.png","4b6e6ae44d3352a6ec1306ec889ea654"],["/static/media/character.a33d75cc.png","a33d75ccc30a4c35e15149b9950cbc7a"],["/static/media/charactor-2.baba7169.gif","baba7169c6df2f6798b61140934151df"],["/static/media/crosss.2467acb0.png","2467acb005ffed74201a2da888fee680"],["/static/media/logo.1442d1dc.png","1442d1dcdb7a512dac908f9b892c52ca"],["/static/media/slick.b7c9e1e4.woff","b7c9e1e479de3b53f1e4e30ebac2403a"],["/static/media/slick.ced611da.eot","ced611daf7709cc778da928fec876475"],["/static/media/slick.d41f55a7.ttf","d41f55a78e6f49a5512878df1737e58a"],["/static/media/slick.f97e3bbf.svg","f97e3bbf73254b0112091d0192f17aec"],["/static/media/topcharactor.54fab347.gif","54fab3470d01b04313bcb8db9e4e034b"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,c),e=urlsToCacheKeys.has(a));var n="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});